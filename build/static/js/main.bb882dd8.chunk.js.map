{"version":3,"sources":["work/Todoing.js","work/Todoinput.js","work/Done.js","work/Todolist.js","index.js"],"names":["Todoing","className","style","marginLeft","fontSize","color","backgroundColor","width","borderRadius","this","props","todo","length","map","item","idx","key","type","defaultChecked","onClick","e","complete","delTodo","Component","Todoinput","handleInput","keyCode","addTodo","target","value","background","height","onKeyDown","placeholder","required","Done","done","checked","cancleComplete","delDone","Todolist","addItem","msg","setState","state","localStorage","setItem","JSON","stringify","delItem","splice","delDoneItem","completeItem","parse","getItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb882dd8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class Todoing extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='itemBox'>\r\n\r\n                <h1 style={{marginLeft:'100px'}}>正在进行<span style={{marginLeft:'400px',fontSize:'20px',color:'#666',backgroundColor:'white',width:'40px',borderRadius:'50px'}}>{this.props.todo.length}</span></h1>\r\n\r\n                <ul>\r\n\r\n                    {this.props.todo.map(\r\n\r\n                        (item,idx)=><li key={idx} className='item'>\r\n\r\n                            <input type=\"checkbox\" defaultChecked={false} onClick={(e)=>{this.props.complete(idx,e)}}/>\r\n\r\n                            {item}<button className='btn' onClick={()=>this.props.delTodo(idx)}>delete</button></li>\r\n\r\n                    )}\r\n\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class Todoinput extends Component {\r\n\r\n    handleInput = (e)=>{\r\n\r\n        if(e.keyCode === 13){//获取键入值，为enter时\r\n\r\n            this.props.addTodo(e.target.value);//将input内value值传入\r\n\r\n            e.target.value = '';//enter后清空input框\r\n\r\n            // localStorage.setItem('todo',)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div style={{background:'grey',height:'50px'}}>\r\n\r\n                <div style={{fontSize:'30px',marginLeft:'100px'}}>ToDoList<input style={{width:'400px',height:'30px',fontSize:'20px',borderRadius:'8px',marginLeft:'50px'}}className='add' type=\"text\" onKeyDown={this.handleInput}  placeholder=\"添加ToDo\" required=\"required\"/></div>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\n\r\n\r\n\r\nexport default class Done extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className='itemBox'>\r\n\r\n                <h1 style={{marginLeft:'100px'}}>已经完成<span style={{marginLeft:'400px',fontSize:'20px',borderRadius:'50px',color:'#666',backgroundColor:'white',width:'40px'}}>{this.props.done.length}</span></h1>\r\n\r\n                <ul>\r\n\r\n                    {this.props.done.map(\r\n\r\n                        (item,idx)=><li key={idx} className='item'>\r\n\r\n                            <input type=\"checkbox\" checked onClick={(e)=>{this.props.cancleComplete(idx,e)}}/>\r\n\r\n                            {item}<button className='btn' onClick={()=>this.props.delDone(idx)}>delete</button></li>\r\n\r\n                    )}\r\n\r\n                </ul>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\n\r\nimport Todoing from './Todoing';\r\n\r\nimport Todoinput from './Todoinput';\r\n\r\nimport Done from './Done';\r\n\r\n\r\n\r\nexport default class Todolist extends Component {\r\n\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state={\r\n\r\n            todo:[],\r\n\r\n            done:[]\r\n\r\n        }\r\n\r\n    }\r\n\r\n    //页面刷新后将localstorage添加到对应ul中\r\n\r\n    componentWillMount(){\r\n\r\n        var todo = JSON.parse(localStorage.getItem('todo'));\r\n\r\n        var done = JSON.parse(localStorage.getItem('done'));\r\n\r\n        if(todo){\r\n\r\n            this.setState({\r\n\r\n                todo:todo\r\n\r\n            })\r\n\r\n        }\r\n\r\n        if(done){\r\n\r\n            this.setState({\r\n\r\n                done:done\r\n\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(){\r\n\r\n        localStorage.setItem('todo',JSON.stringify(this.state.todo));\r\n\r\n        localStorage.setItem('done',JSON.stringify(this.state.done));\r\n\r\n    }\r\n\r\n    //添加待办事项，并存入localstorage\r\n\r\n    addItem = (msg)=>{\r\n\r\n        this.setState({\r\n\r\n            todo:[...this.state.todo,msg]\r\n\r\n        })\r\n\r\n        var todo = [...this.state.todo,msg];\r\n\r\n        localStorage.setItem(\"todo\",JSON.stringify(todo));\r\n\r\n    }\r\n\r\n    //删除待办事项\r\n\r\n    delItem = (idx)=>{\r\n\r\n        var todo = this.state.todo;\r\n\r\n        todo.splice(idx,1);\r\n\r\n        this.setState({\r\n\r\n            todo:todo\r\n\r\n        })\r\n\r\n    }\r\n\r\n    //删除已完成事项\r\n\r\n    delDoneItem = (idx)=>{\r\n\r\n        var done = this.state.done;\r\n\r\n        done.splice(idx,1);\r\n\r\n        this.setState({\r\n\r\n            done:done\r\n\r\n        })\r\n\r\n    }\r\n\r\n    //完成待办事项\r\n\r\n    completeItem=(idx,e)=>{\r\n\r\n        var todo = this.state.todo;\r\n\r\n        var done = [...this.state.done,todo[idx]];\r\n\r\n        \r\n\r\n        todo.splice(idx,1);\r\n\r\n        this.setState({\r\n\r\n            todo:todo,\r\n\r\n            done:done\r\n\r\n        })\r\n\r\n        e.target.checked = false;\r\n\r\n        // console.log(todo);\r\n\r\n    }\r\n\r\n    //取消完成待办事项\r\n\r\n    cancleComplete=(idx,e)=>{\r\n\r\n        var done = this.state.done;\r\n\r\n        var todo = [...this.state.todo,done[idx]];\r\n\r\n        done.splice(idx,1);\r\n\r\n        this.setState({\r\n\r\n            todo:todo,\r\n\r\n            done:done\r\n\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Todoinput addTodo={this.addItem}/>\r\n\r\n                <Todoing todo={this.state.todo} complete={this.completeItem} delTodo={this.delItem}/>\r\n\r\n                <Done done={this.state.done} delDone={this.delDoneItem} cancleComplete={this.cancleComplete}/>\r\n\r\n            </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport Todolist from './work/Todolist'\r\n\r\n// 容器组件 / UI组件（展示组件）\r\n\r\n// 智能组件 / 木偶组件\r\n\r\n\r\n\r\n// 容器组件（container/pages）：逻辑，功能\r\n\r\n// UI组件（components）：写成函数组件，展示，返回React元素\r\n\r\n\r\n\r\nReactDOM.render(\r\n\r\n    <Todolist/>,\r\n\r\n    document.getElementById('root')\r\n\r\n)"],"sourceRoot":""}